// Generated by view binder compiler. Do not edit!
package it.dogior.hadEnough.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import it.dogior.hadEnough.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LocalizationSettingsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView countryTw;

  @NonNull
  public final View divider1;

  @NonNull
  public final View divider3;

  @NonNull
  public final EditText editTextCountry;

  @NonNull
  public final EditText editTextLanguage;

  @NonNull
  public final TextView headerTw;

  @NonNull
  public final TextView langTw;

  @NonNull
  public final ImageButton saveButton;

  private LocalizationSettingsBinding(@NonNull LinearLayout rootView, @NonNull TextView countryTw,
      @NonNull View divider1, @NonNull View divider3, @NonNull EditText editTextCountry,
      @NonNull EditText editTextLanguage, @NonNull TextView headerTw, @NonNull TextView langTw,
      @NonNull ImageButton saveButton) {
    this.rootView = rootView;
    this.countryTw = countryTw;
    this.divider1 = divider1;
    this.divider3 = divider3;
    this.editTextCountry = editTextCountry;
    this.editTextLanguage = editTextLanguage;
    this.headerTw = headerTw;
    this.langTw = langTw;
    this.saveButton = saveButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LocalizationSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LocalizationSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.localization_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LocalizationSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.country_tw;
      TextView countryTw = ViewBindings.findChildViewById(rootView, id);
      if (countryTw == null) {
        break missingId;
      }

      id = R.id.divider1;
      View divider1 = ViewBindings.findChildViewById(rootView, id);
      if (divider1 == null) {
        break missingId;
      }

      id = R.id.divider3;
      View divider3 = ViewBindings.findChildViewById(rootView, id);
      if (divider3 == null) {
        break missingId;
      }

      id = R.id.editText_country;
      EditText editTextCountry = ViewBindings.findChildViewById(rootView, id);
      if (editTextCountry == null) {
        break missingId;
      }

      id = R.id.editText_language;
      EditText editTextLanguage = ViewBindings.findChildViewById(rootView, id);
      if (editTextLanguage == null) {
        break missingId;
      }

      id = R.id.header_tw;
      TextView headerTw = ViewBindings.findChildViewById(rootView, id);
      if (headerTw == null) {
        break missingId;
      }

      id = R.id.lang_tw;
      TextView langTw = ViewBindings.findChildViewById(rootView, id);
      if (langTw == null) {
        break missingId;
      }

      id = R.id.save_button;
      ImageButton saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      return new LocalizationSettingsBinding((LinearLayout) rootView, countryTw, divider1, divider3,
          editTextCountry, editTextLanguage, headerTw, langTw, saveButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
