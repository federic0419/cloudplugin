// Generated by view binder compiler. Do not edit!
package it.dogior.hadEnough.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import it.dogior.hadEnough.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SettingsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final View divider;

  @NonNull
  public final View divider2;

  @NonNull
  public final Switch dubSwitch;

  @NonNull
  public final TextView headerTw;

  @NonNull
  public final ImageButton saveBtn;

  @NonNull
  public final LinearLayout secondarySwitches;

  @NonNull
  public final LinearLayout settingsLayout;

  @NonNull
  public final Switch subSwitch;

  @NonNull
  public final Switch uniqueSwitch;

  private SettingsBinding(@NonNull LinearLayout rootView, @NonNull View divider,
      @NonNull View divider2, @NonNull Switch dubSwitch, @NonNull TextView headerTw,
      @NonNull ImageButton saveBtn, @NonNull LinearLayout secondarySwitches,
      @NonNull LinearLayout settingsLayout, @NonNull Switch subSwitch,
      @NonNull Switch uniqueSwitch) {
    this.rootView = rootView;
    this.divider = divider;
    this.divider2 = divider2;
    this.dubSwitch = dubSwitch;
    this.headerTw = headerTw;
    this.saveBtn = saveBtn;
    this.secondarySwitches = secondarySwitches;
    this.settingsLayout = settingsLayout;
    this.subSwitch = subSwitch;
    this.uniqueSwitch = uniqueSwitch;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.divider2;
      View divider2 = ViewBindings.findChildViewById(rootView, id);
      if (divider2 == null) {
        break missingId;
      }

      id = R.id.dub_switch;
      Switch dubSwitch = ViewBindings.findChildViewById(rootView, id);
      if (dubSwitch == null) {
        break missingId;
      }

      id = R.id.header_tw;
      TextView headerTw = ViewBindings.findChildViewById(rootView, id);
      if (headerTw == null) {
        break missingId;
      }

      id = R.id.save_btn;
      ImageButton saveBtn = ViewBindings.findChildViewById(rootView, id);
      if (saveBtn == null) {
        break missingId;
      }

      id = R.id.secondary_switches;
      LinearLayout secondarySwitches = ViewBindings.findChildViewById(rootView, id);
      if (secondarySwitches == null) {
        break missingId;
      }

      LinearLayout settingsLayout = (LinearLayout) rootView;

      id = R.id.sub_switch;
      Switch subSwitch = ViewBindings.findChildViewById(rootView, id);
      if (subSwitch == null) {
        break missingId;
      }

      id = R.id.unique_switch;
      Switch uniqueSwitch = ViewBindings.findChildViewById(rootView, id);
      if (uniqueSwitch == null) {
        break missingId;
      }

      return new SettingsBinding((LinearLayout) rootView, divider, divider2, dubSwitch, headerTw,
          saveBtn, secondarySwitches, settingsLayout, subSwitch, uniqueSwitch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
